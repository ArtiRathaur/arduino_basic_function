`lcd` library ka use Arduino ke LCD (Liquid Crystal Display) modules ke saath interaction karne ke liye hota hai. Ye library aapko LCD screen par text display karne aur uske behavior ko control karne ki suvidha deti hai. Aaiye, in functions ko samjhte hain:

### 1. **lcd.begin()**
   - **Purpose**: Ye function LCD ko initialize karta hai, yani display ko setup karta hai. Jab aap LCD screen use karte hain, pehle `lcd.begin()` ko call karna zaroori hota hai.
   - **Syntax**:
     ```cpp
     lcd.begin(columns, rows);
     ```
     - `columns`: LCD ke screen ka number of columns (typically 16 or 20).
     - `rows`: LCD ke screen ka number of rows (typically 2 or 4).
   - **Usage**: Jab aap LCD ko initialize karte hain, tab aapko is function ka use karna padta hai.

   **Example**:
   ```cpp
   lcd.begin(16, 2);  // 16 columns aur 2 rows wali LCD ko initialize karte hain
   ```

### 2. **lcd.print()**
   - **Purpose**: Ye function LCD par text print karne ke liye use hota hai. Aap is function ka use text, numbers, ya variables ko display karne ke liye karte hain.
   - **Syntax**:
     ```cpp
     lcd.print(data);
     ```
     - `data`: Ye wo data hai jo aap LCD par display karna chahte hain (ye string, number ya variable ho sakta hai).
   - **Usage**: Jab aapko LCD screen par koi text ya data print karna ho, tab is function ka use karte hain.

   **Example**:
   ```cpp
   lcd.print("Hello, World!");  // LCD par "Hello, World!" print karte hain
   ```

### 3. **lcd.setCursor()**
   - **Purpose**: Ye function LCD screen par cursor ki position ko set karta hai. Isse aap specify kar sakte hain ki aap text ko kis row aur column par print karna chahte hain.
   - **Syntax**:
     ```cpp
     lcd.setCursor(column, row);
     ```
     - `column`: Ye wo column hai jahan aap text ko start karna chahte hain.
     - `row`: Ye wo row hai jahan aap text ko display karna chahte hain.
   - **Usage**: Jab aapko text ko kisi specific position par display karna ho, tab is function ka use karte hain.

   **Example**:
   ```cpp
   lcd.setCursor(0, 1);  // 1st row aur 0th column par cursor ko set karte hain
   lcd.print("Arduino!"); // Ab LCD par "Arduino!" print hoga
   ```

### 4. **lcd.clear()**
   - **Purpose**: Ye function LCD screen ko clear karta hai, yani jo bhi text ab tak display ho raha hai, wo remove ho jata hai.
   - **Syntax**:
     ```cpp
     lcd.clear();
     ```
   - **Usage**: Jab aapko screen ko clear karna ho, tab is function ka use karte hain.

   **Example**:
   ```cpp
   lcd.clear();  // LCD screen ko clear karte hain
   ```

### 5. **lcd.home()**
   - **Purpose**: Ye function LCD ke cursor ko home position par (top-left corner) le jata hai.
   - **Syntax**:
     ```cpp
     lcd.home();
     ```
   - **Usage**: Jab aap cursor ko top-left corner par set karna chahte hain, tab is function ka use karte hain.

   **Example**:
   ```cpp
   lcd.home();  // Cursor ko LCD ke top-left corner (0,0) par le aata hai
   ```

### 6. **lcd.noDisplay()**
   - **Purpose**: Ye function LCD display ko turn off karta hai. Iska matlab hai ki LCD screen par koi bhi text display nahi hoga, lekin data abhi bhi memory mein rahega.
   - **Syntax**:
     ```cpp
     lcd.noDisplay();
     ```
   - **Usage**: Jab aap temporarily LCD display ko off karna chahte hain (text memory mein ho lekin display off ho), tab is function ka use karte hain.

   **Example**:
   ```cpp
   lcd.noDisplay();  // LCD display ko turn off karte hain
   ```

### 7. **lcd.display()**
   - **Purpose**: Ye function LCD display ko wapas on karta hai, yani jo text abhi tak LCD ke memory mein stored hai, wo wapas display hona shuru ho jata hai.
   - **Syntax**:
     ```cpp
     lcd.display();
     ```
   - **Usage**: Jab aap `lcd.noDisplay()` ke baad display ko wapas on karna chahte hain, tab is function ka use karte hain.

   **Example**:
   ```cpp
   lcd.display();  // LCD display ko wapas on karte hain
   ```

---

### Full Example: Displaying Text on LCD with Cursor Control

Is example mein, hum ek program likhenge jo LCD par text display karega, cursor ko control karega, display ko clear karega, aur display ko off/on karega.

```cpp
#include <LiquidCrystal.h>

// LCD pin configuration
LiquidCrystal lcd(12, 11, 5, 4, 3, 2);  // RS, EN, D4, D5, D6, D7 pins

void setup() {
  lcd.begin(16, 2);  // LCD ko initialize karte hain (16 columns, 2 rows)
  lcd.setCursor(0, 0);  // Cursor ko 1st row, 1st column par set karte hain
  lcd.print("Hello, World!");  // LCD par "Hello, World!" print karte hain
  
  delay(2000);  // Thoda wait karte hain

  lcd.clear();  // LCD screen ko clear karte hain
  lcd.setCursor(0, 1);  // Cursor ko 2nd row, 1st column par set karte hain
  lcd.print("Arduino Rocks!");  // LCD par "Arduino Rocks!" print karte hain

  delay(2000);  // Thoda wait karte hain

  lcd.noDisplay();  // LCD display ko off karte hain
  delay(2000);  // 2 second ke liye wait karte hain

  lcd.display();  // LCD display ko wapas on karte hain
}

void loop() {
  // Main loop mein koi kaam nahi hai
}
```

### Step-by-Step Explanation:

1. **Include LCD Library**:
   - `#include <LiquidCrystal.h>` se hum LCD library ko include karte hain taaki hum LCD ko control kar sakein.

2. **LCD Initialization**:
   - `lcd.begin(16, 2);` se hum LCD ko initialize karte hain (16 columns, 2 rows).

3. **Set Cursor and Print Text**:
   - `lcd.setCursor(0, 0);` se cursor ko LCD ke top-left corner (1st row, 1st column) par set karte hain.
   - `lcd.print("Hello, World!");` se "Hello, World!" text display karte hain.

4. **Clear LCD Screen**:
   - `lcd.clear();` se LCD screen ko clear karte hain.

5. **Print New Text**:
   - `lcd.setCursor(0, 1);` se cursor ko 2nd row, 1st column par set karte hain.
   - `lcd.print("Arduino Rocks!");` se "Arduino Rocks!" text display karte hain.

6. **Turn Off LCD Display**:
   - `lcd.noDisplay();` se LCD display ko turn off karte hain.

7. **Turn On LCD Display**:
   - `lcd.display();` se LCD display ko wapas on karte hain.

### Summary of Functions:

1. **lcd.begin(columns, rows)**: LCD ko initialize karta hai.
2. **lcd.print(data)**: LCD par text ya data print karta hai.
3. **lcd.setCursor(column, row)**: LCD par cursor ki position set karta hai.
4. **lcd.clear()**: LCD screen ko clear karta hai.
5. **lcd.home()**: LCD ke cursor ko home position (0,0) par le jata hai.
6. **lcd.noDisplay()**: LCD display ko off karta hai (text memory mein rahega).
7. **lcd.display()**: LCD display ko on karta hai (previous text wapas display hoga).

In functions ka use aap LCD screen par data display karne aur uske behavior ko control karne ke liye karte hain.
